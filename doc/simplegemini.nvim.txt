simplegemini.nvim.txt	Chat with Google Gemini from inside Neovim

==============================================================================
CONTENTS                                                *SimpleGemini*

    1. Features  .......................... |SimpleGeminiFeatures|
    2. Installation  ...................... |SimpleGeminiInstallation|
    3. Commands  .......................... |SimpleGeminiCommands|
    4. Functions  ......................... |SimpleGeminiFunctions|
    5. Changelog  ......................... |SimpleGeminiChangelog|
    6. Credits  ........................... |SimpleGeminiCredits|

==============================================================================
1. Features                                             *SimpleGeminiFeatures*

SimpleGemini plugin let you ask something to Gemini without leaving NeoVim.
The plugin is written in Lua and takes its inspiration from askGemini.nvim. It
adds a few new commands to your environment (see also |SimpleGeminiCommands|).

It does not create any new keymap. You have to configure them by yourself.

==============================================================================
2. Installation                                         *SimpleGeminiInstallation*

The plugin needs a Gemini API key to connect to the Gemini API. You have to
follow the instructions at https://aistudio.google.com/app/apikey?hl=fr

Installation with lazy.nvim~

If you use lazy.nvim as your package manager, you can install SimpleGemini.nvim
with the following specification.
>
 return {
    [...]
    {
	'frodonh/simplegemini.nvim',
    }
    [...]
 }
<
==============================================================================
3. Commands                                             *SimpleGeminiCommands*

                                                        *:GptToBuf*
:[range]GptToBuf [prompt]
                         Ask a question to Gemini chat and append answer after
                         cursor position in the current buffer. If specified, 
			 [prompt] is sent to Gemini chat.
			 If [range] is given, the prompt is followed by a
			 newline and all the lines in the range. If no
			 [range] is specified, the current line is used.

:[range]GptToBuf! {prompt}
                         Ask a question to Gemini chat and append answer after
			 cursor position in the current buffer. {prompt} is
			 the prompt sent to Gemini chat.
			 Unlike the plain version :GptToBuf, the bang command
			 does not append the lines in the range to the prompt.
			 [range] is ignored.

                                                        *:GptToReg*
:[range]GptToReg [prompt]
                         Ask a question to Gemini chat and fill a register with
                         the answer. If specified, [prompt] is sent to Gemini
			 chat.
			 If [range] is given, the prompt is followed by a
			 newline and all the lines in the range. If no
			 [range] is specified, the current line is used.

:[range]GptToReg! {prompt}
                         Ask a question to Gemini chat and fill a register with
                         with the answer. If specified, [prompt] is sent to 
			 Gemini chat.
			 Unlike the plain version :GptToReg, the bang command
			 does not append the lines in the range to the prompt.
			 [range] is ignored.

                                                        *:GptToScratch*
:[range]GptToScratch [prompt]
                         Ask a question to Gemini chat and display the answer   
                         in a new floating window. If specified, [prompt]
			 is sent to Gemini chat. The floating window can be
			 closed by pressing <Esc>. The content of the
			 floating window is deleted when it is closed.
			 If [range] is given, the prompt is followed by a
			 newline and all the lines in the range. If no
			 [range] is specified, the current line is used.

:[range]GptToScratch! {prompt}
                         Ask a question to Gemini chat and display the answer   
                         in a new floating window. If specified, [prompt]
			 is sent to Gemini chat. The floating window can be
			 closed by pressing <Esc>. The content of the
			 floating window is deleted when it is closed.
			 Unlike the plain version :GptToScratch, the bang
			 command does not append the lines in the range to
			 the prompt. [range] is ignored.

==============================================================================
4. Functions                                            *SimpleGeminiFunctions*

SetupGpt({options})                                     *SimpleGeminiSetup*
                Configure some options. {options} is a dictionary. See also
		|SimpleGeminiOptions| for configuration parameters.

Options~
                                                        *SimpleGeminiOptions*

A few configuration options are provided. They may be defined at startup (with
require 'SimpleGemini'.setup({options}) ), or using the |SetupGpt| function.

register                 A single character which identifies the register
                         where the answer of Bing AI shall be loaded when the
			 |:GptToReg|[!] command is used. The default value is
			 'g'.

==============================================================================
5. Changelog                                            *SimpleGeminiChangelog*

Date: May 29th, 2025
First version

==============================================================================
6. Credits                                              *SimpleGeminiCredits*

This plugin takes its inspiration from askGemini.nvim which is available here:
https://github.com/agusnt/askGemini.nvim/tree/main

 vim:tw=78:ts=8:noet:ft=help:norl:
